---
import '../styles/global.css';

interface Link {
  url: string;
  icon: string;
  text: string;
}

interface Props {
  pfpimg: string;
  msg: string;
  className: string;
  links?: Link[];
  index?: number;
}

const { pfpimg, msg, className, links = [], index = 0 } = Astro.props as Props;

const [firstPart, ...rest] = msg.split('.');
const secondPart = rest.join('.');
---

<div class="card-container relative w-full max-w-md mx-auto px-4">
  <div class={`${className} flex flex-row items-center relative transition-transform duration-500 ease-out w-full 
    ${index === 1 ? 'group-hover:translate-x-[-20px]' : ''} 
    max-sm:flex-col max-sm:text-center max-sm:py-6 max-sm:items-center max-sm:gap-3`}>
    <img
      id={`pfp-image-${index + 1}`}
      src={pfpimg}
      alt="Memoji profile picture"
      class="w-20 h-auto pl-2 select-none pointer-events-none max-sm:pl-0 max-sm:w-16"
    />
    <span class="flex flex-col pl-4 max-sm:pl-0 max-sm:items-center w-full">
      <p class="font-semibold text-lg max-sm:text-base">Marina</p>
      <p class="max-sm:text-center max-sm:px-4">
        {firstPart}<br />{secondPart}
      </p>

      {index === 1 && links.length > 0 && (
        <div class="mt-2 flex justify-start items-center gap-3 w-full max-sm:justify-center">
          {links.map(link => (
            <a 
                href={link.url} 
                target="_blank" 
                class="tag flex items-center gap-1 border border-[#311B6609] bg-[#F3F7FF] 
                font-medium text-text-primary py-1 px-2 rounded-full 
                text-xs lg:text-[0.7rem] hover:bg-[#e5eefb] max-sm:text-xs"
                >
                <img src={link.icon} alt={link.text} class="w-4 h-4 max-sm:w-3 max-sm:h-3" />
                <span>{link.text}</span>
                </a>
          ))}
        </div>
      )}
    </span>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    ['pfp-image-1', 'pfp-image-2'].forEach(id => {
      const img = document.getElementById(id) as HTMLImageElement | null;
      if (img) {  
        img.style.pointerEvents = "auto";

        img.addEventListener('click', () => {
          const originalSrc = img.src;
          img.src = '/click.webp';

          setTimeout(() => {
            img.src = originalSrc;
          }, 500);
        });
      }
    });
  });
</script>